ftrace is a kernel facility for debugging issues:

    Ftrace is a very simple function tracer
    -unrelated to kprobes/SystemTap- which was born
    in the -rt patches. It uses a compiler feature to
    insert a small, 5-byte No-Operation instruction
    to the beginning of every kernel function, which
    NOP sequence is then dynamically patched into
    a tracer call when tracing is enabled by the
    administrator. If it's disabled, the overhead
    of the instructions is very small and not
    measurable even in micro-benchmarks. Although
    ftrace is the function tracer, it also includes
    an plugin infrastructure that allows for other
    types of tracing. Some of the tracers that are
    currently in ftrace include a tracer to trace
    context switches, the time it takes for a high
    priority task to run after it was woken up, how
    long interrupts are disabled, the time spent in
    preemption off critical sections.

    The interface to access ftrace can be found
    in /debugfs/tracing, which are documented
    in Documentation/ftrace.txt.

    - http://kernelnewbies.org/Linux_2_6_27

If your kernel supports ftrace, this package provides
a convenient init script to dynamically enable/disable
ftrace in the kernel based on config file settings.

This helps to: 
* apply a consistent setting across multiple nodes
* avoid typos from, well, typing.

If your system is running a RHEL, Fedora, or a Red Hat derivative
distribution of Linux, you can check for ftrace support by running:

$ grep -i ftrace /boot/config-*
/boot/config-2.6.35.10-74.fc14.x86_64:CONFIG_HAVE_FTRACE_NMI_ENTER=y
/boot/config-2.6.35.10-74.fc14.x86_64:CONFIG_HAVE_DYNAMIC_FTRACE=y
/boot/config-2.6.35.10-74.fc14.x86_64:CONFIG_HAVE_FTRACE_MCOUNT_RECORD=y
/boot/config-2.6.35.10-74.fc14.x86_64:CONFIG_FTRACE_NMI_ENTER=y
/boot/config-2.6.35.10-74.fc14.x86_64:CONFIG_FTRACE=y
/boot/config-2.6.35.10-74.fc14.x86_64:CONFIG_FTRACE_SYSCALLS=y
/boot/config-2.6.35.10-74.fc14.x86_64:CONFIG_DYNAMIC_FTRACE=y
/boot/config-2.6.35.10-74.fc14.x86_64:CONFIG_FTRACE_MCOUNT_RECORD=y

